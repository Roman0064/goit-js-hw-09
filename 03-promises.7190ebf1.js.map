{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC7B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACzBC,YAAW,KACeC,KAAKC,SAAW,GAElCJ,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CAIjBO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACjEA,EAAMC,iBAEN,MAAMC,EAAaC,KAAKC,SAASd,MAC3Be,EAAYF,KAAKC,SAASE,KAC1BC,EAAcJ,KAAKC,SAASI,OAE5BC,EAAQC,OAAOR,EAAWS,OAC1BL,EAAOI,OAAOL,EAAUM,OACxBH,EAASE,OAAOH,EAAYI,OAE5BC,EAAW,GAEjB,IAAI,IAAIC,EAAI,EAAGA,EAAIL,EAAQK,IAAK,CAC5B,MACMC,EAAU1B,EADCyB,EAAI,EACmBJ,EAAQI,EAAIP,GAEpDQ,EACKC,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACf0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,MAAU,IAE3E6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAChB0B,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,MAAU,IAG7EsB,EAASS,KAAKP,E,CAGlBX,KAAKmB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from \"notiflix\";\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n            if(shouldResolve){\n                resolve({position, delay });\n            } else{\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n    event.preventDefault();\n\n    const delayInput = this.elements.delay;\n    const stepInput = this.elements.step;\n    const amountInput = this.elements.amount;\n\n    const delay = Number(delayInput.value);\n    const step = Number(stepInput.value);\n    const amount = Number(amountInput.value);\n\n    const promises = [];\n\n    for(let i = 0; i < amount; i++) {\n        const position = i + 1;\n        const promise = createPromise(position, delay + i * step);\n\n        promise\n            .then(({ position, delay }) => {\n                Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            })\n            .catch(({ position, delay }) => {\n                Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n            });\n\n        promises.push(promise);\n    }\n    \n    this.reset();\n});"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delayInput","this","elements","stepInput","step","amountInput","amount","delay1","Number","value","promises","i","promise","then","$parcel$interopDefault","Notify","success","catch","failure","push","reset"],"version":3,"file":"03-promises.7190ebf1.js.map"}